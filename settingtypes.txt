# This file contains settings of Mineclonia that can be changed in
# minetest.conf

[World]
# Fire spreads and flammable blocks might be destroyed by nearby fire.
# Destructive fire may cause severe destruction.
# Fire blocks will be non-destructive and stops spreading when this
# setting is disabled, but they still deal damage to creatures.
enable_fire (Destructive and spreading fire) bool true

# If enabled, the weather will change naturally over time.
mcl_doWeatherCycle (Changing weather) bool true

# If enabled, breaking blocks will cause them to drop as item.
# Note that blocks never have drops when in Creative Mode.
mcl_doTileDrops (Blocks have drops) bool true

# If enabled, explosions destroy blocks.
mcl_explosions_griefing (Explosion griefing) bool true

# If disabled, no ores will be generated.
mcl_generate_ores (Generate ores) bool true

# Enable minetest mapgen dungeons
mcl_enable_mt_dungeons (Native Minetest dungeons) bool false

# If enabled, the “flat” map generator generates a Classic Superflat world:
# Completely flat, 1 layer of grass blocks on top of 2 layers of dirt on
# top of a final layer of bedrock. No caves, trees or plants.
# Also, if enabled, the setting “mgflat_flags” is ignored.
# If disabled, Minetest's default flat map generator is used, that is, trees,
# caves, and a deeper underground can be generated.
#
# Note: This setting has no effect on existing worlds.
mcl_superflat_classic (Classic superflat map generation) bool false

[Players]
# If enabled, players respawn at the bed they last lay on instead of normal
# spawn.
# This setting is only read at startup.
enable_bed_respawn (Respawn at bed) bool true

# How many players have to sleep to skip the night, in percent.
# Setting to 0 will mean 1 player is always enough to skip the night. Setting above 100 will prevent skipping the night.
# 100 by default.
# The setting can be changed ingame using `/set mcl_playersSleepingPercentage <number>`
mcl_playersSleepingPercentage (Players Sleeping Percentage) int 100

# Normally, players drop all their items when they die. Enable this
# setting, so players always keep their inventory on death.
mcl_keepInventory (Keep inventory on death) bool false

# If enabled, chat messages are shown to everyone when a player dies.
mcl_showDeathMessages (Show death messages) bool true

# If enabled, the recipe book will progressively be filled with new recipes that can be crafted from all items you ever have had in your inventory.
# Recommended for new players and for a spoiler-free gameplay experience.
# If disabled, all recipes will be shown.
mcl_craftguide_progressive_mode	(Learn crafting recipes progressively) bool true

# If disabled, the skin of all players will be character.png
mcl_enable_skin_customization (Player skin customization) bool true

# How far the player hand can reach
# Default:4.5
mcl_hand_range (Hand range) float 4.5 1 128

# How far the player hand can reach in creative mode
# Default:10
mcl_hand_range_creative (Creative mode hand range) float 10 1 128

# If enabled the hunger mechanic will be active
# If disabled eating food will heal instantly.
mcl_enable_hunger (Hunger) bool true

[Mobs]
# If enabled, mobs will spawn naturally. This does not affect
# affect mob spawners.
# This setting is only read at startup.
mobs_spawn (Spawn mobs naturally) bool true

# If enabled, only peaceful mobs will appear naturally. This does not
# affect mob spawners.
# This setting is only read at startup.
only_peaceful_mobs (Spawn only peaceful mobs) bool false

# Allow mobs to spawn in protected areas. This does not affect
# mob spawners.
mobs_spawn_protected (Mobs spawn in protected areas) bool false

# Mobs difficulty. This is a number that will affect the initial and maximum
# health and the amount of damage that mobs deal. Health and damage will
# be multiplied with this number.
mob_difficulty (Mob difficulty factor) float 1.0 0.0

# If enabled, mobs might drop items when they die.
mobs_drop_items (Mobs drop items) bool true

# If enabled, mobs can take, place, change and destroy blocks around them.
mobs_griefing (Mob griefing) bool true

# If enabled, mobs won't damage particles when they got hurt.
mobs_disable_blood (Disable mob damage particles) bool false

#Maximum amount mobs (default:500)
mcl_mob_cap_total (Global mob cap) int 500 0 2048

#Maximum amount of mobs per player (default:75)
mcl_mob_cap_player (Mob cap per player) int 75 0 2048

#Maximum amount of monsters that will spawn near a player (default:70)
mcl_mob_cap_monster (Mob cap monsters) int 70 0 2048

#Maximum amount of animals that will spawn near a player (default:10)
mcl_mob_cap_animal (Mob cap animals) int 10 0 1024

#Maximum amount of ambient mobs that will spawn near a player (default:15)
mcl_mob_cap_ambient (Mob cap ambient mobs) int 15 0 1024

#Should wither follow the player who spawned him around
wither_follow_spawner (Wither following his spawner) bool true

#Should wither strafe while in combat
wither_strafes (Wither strafes) bool true

#Display mob icons in inventory instead of mc-like spawn eggs
mcl_old_spawn_icons (Old spawn icons instead of eggs) bool false

# How far from players should mobs stop moving
# Larger values will have a larger performance impact (default:48)
mcl_mob_active_range (Active mob range) int 48 0 256

[Graphics]
# How many vertical animation frames the fire texture (fire_basic_flame_animated.png) has.
# This may vary depending on the texture pack you use.
# Form: Image height / Image width
fire_animation_frames (Fire Animation Frames) int 8

# Whether to animate chests when open / close
animated_chests (Animated chests) bool true

# The maximum number of boss bars to simultaneously display on the screen
max_bossbars (Maximum Boss bars) int 5

[Experimental]
# If disabled, command blocks will be unusable (but still present).
mcl_enable_commandblocks (Command blocks) bool true

# Make some blocks emit decorative particles like flames. This setting
# specifies the detail level of particles, with higher levels being
# more CPU demanding.
# WARNING: This setting has quite poor performance and can slow down your
# game by a lot.
mcl_node_particles (Block particles detail level) enum none high,medium,low,none

# If enabled, this will substitute a few blocks in village schematics so they blend into normal, snowy, and sandy areas. Defaults to true.
basic_pseudobiome_villages (Pseudobiome-based villages) bool true

[Additional Features]
# Enable Bookshelf inventories
mcl_bookshelf_inventories (Bookshelf inventories) bool true

# All tameable mobs listen to the "sit" right-click like dogs
mcl_extended_pet_control (Extended pet control) bool false

# Enable stairs out of wood bark
mcl_bark_stairs (Bark Stairs) bool true

# Use light levels from Minecraft 1.18+ for monster spawning. Disable to use older mob specific light levels.
mcl_mobs_modern_lighting (Modern light rules for spawning) bool true

# Enable piston movement of inventory nodes.
mcl_inv_nodes_movable (Inventory nodes movable) bool true

# Make iron golems teleport home when they are far away and villagers teleport
# home when the night is skipped.
mcl_mob_allow_nav_hacks (Mob navigation hacks) bool false

# Allow players to create Minecraft-like maps.
enable_real_maps (Enable Real Maps) bool true

[Debugging]
# Log mob spawning and despawning events
mcl_logging_mobs_spawn (Log Mob Spawning) bool true

# If enabled mapgen timings will be dumped to log
mcl_logging_mapgen (Chunk generation logging) bool false

# If enabled generated structures will be logged
mcl_logging_structures (Structure generation logging) bool true

# Complete debug logging for mcl_signs events. Use this if you have issues with signs.
mcl_logging_mcl_signs (Complete debug logging for mcl_signs) bool false

# Debug logging for mcl_events.
mcl_logging_event_api (Debug logging for mcl_events) bool false

[Villages]
mcl_villages_min_jobs (The minimum number of jobs to have in a village) int 1

mcl_villages_max_jobs (The maximum number of jobs to have in a village) int 12

mcl_villages_village_chance (1 in X chance a village will spawn in a valid chunk. Set to 0 for no villages) int 100

# This controls how job sites and houses are placed during village construction
# random: shuffles the buildings so they get placed in any order
# jobs: places the job sites first so they tend to be closer to the bell
# houses: places the houses first so the tend to be closer to the bell
mcl_villages_placement_priority (Which buildings should be closer to the bell) enum random random,jobs,houses

# This is fine for players, but expect all the villagers to die very quickly
mcl_villages_allow_water_villages (Allow buildings to spawn on top of water) bool false
